<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.emgram.kr.dobby.dao.HolidayWorkDao">

  <select id="countWorkDayByYearAndEmployeeNo" parameterType="java.util.Map" resultType="long">
    select count(*)
    from holiday_work
    where employee_no = #{employeeNo}
      and work_date between #{startDate} and #{endDate}
      and delete_dt is null;
  </select>

  <select id="countFindAllHolidayWorkBySearchCondition" parameterType="com.emgram.kr.dobby.dto.SearchCondition"
  resultType="Integer">
    select count(i1.holidayWorkId) from (select h.holiday_work_id as holidayWorkId
    from holiday_work h
    join employee e on h.employee_no = e.employee_no
    left join `rank` r on e.rank_no = r.rank_no
    <where>
      <if test="startDate != null and endDate != null">
        and (h.work_date between #{startDate} and #{endDate})
      </if>
      <if test="query != null">
        and
        (h.employee_no like CONCAT('%',#{query},'%')
        or h.memo like CONCAT('%',#{query},'%')
        or e.name like CONCAT('%',#{query},'%')
        or r.rank_name like CONCAT('%',#{query},'%'))
      </if>
      <if test="true">
        and h.delete_dt is null
      </if>
    </where>)
    as i1
  </select>
  <select id="findAllHolidayWorkBySearchCondition" parameterType="com.emgram.kr.dobby.dto.SearchCondition"
  resultType="com.emgram.kr.dobby.dto.holiday.work.HolidayWorkDto">
    select h.holiday_work_id as holidayWorkId,
           h.employee_no as employeeNo,
            e.name,
           r.rank_name as rankName,
           h.work_date as workDate,
           h.memo
    from holiday_work h
    join employee e on h.employee_no = e.employee_no
    left join `rank` r on e.rank_no = r.rank_no
    <where>
      <if test="startDate != null and endDate != null">
        and (h.work_date between #{startDate} and #{endDate})
      </if>
      <if test="query != null">
        and
        (h.employee_no like CONCAT('%',#{query},'%')
                or h.memo like CONCAT('%',#{query},'%')
                or e.name like CONCAT('%',#{query},'%')
                or r.rank_name like CONCAT('%',#{query},'%'))

      </if>
        <if test="true">
        and h.delete_dt is null
        </if>
    </where>
    limit #{pageSize} offset #{pageOffset};
  </select>
  
  <insert id="saveHolidayWork" parameterType="com.emgram.kr.dobby.dto.holiday.work.HolidayWork">
    insert into holiday_work (employee_no, work_date, memo) value
    (#{employeeNo}, #{workDate}, #{memo});
  </insert>
  
  <update id="updateHolidayWork" parameterType="java.util.Map" >
    update holiday_work set
        employee_no = #{holidayWorkDto.employeeNo},
        work_date = #{holidayWorkDto.workDate},
        memo = #{holidayWorkDto.memo}
    where holiday_work_id = #{holidayWorkId};
  </update>
  <update id="deleteHolidayWork" parameterType="Long">
    update holiday_work set delete_dt = now()
    where holiday_work_id = #{holidayWorkId};
  </update>

  <select id="findMuchHolidayWorker" parameterType="int" resultType="com.emgram.kr.dobby.dto.dashboard.HolidayDashBoardDTO">
    select f1.name, max(f1.workdateCount) as holidayWorkDateCount
    from (SELECT
      e.name AS name,
      count(hw.work_date) as workdateCount
    FROM holiday_work hw
           JOIN employee e on hw.employee_no = e.employee_no
    WHERE year(hw.work_date) = #{year} and hw.delete_dt is null and e.delete_dt is null
    group by e.name) f1;
  </select>


  <select id="countAllHolidayWorkByYear" parameterType="int" resultType="Integer">
    select count(i1.work_date) from
    (select hw.work_date
                   from holiday_work hw
                          join employee e on hw.employee_no = e.employee_no
                   where year(hw.work_date) = #{year} and hw.delete_dt is null and e.delete_dt is null
                   group by hw.work_date) i1
  </select>


</mapper>